name: Deploy DEV

on:
  push:
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY:  ${{ secrets.SSH_KEY }}
      DEV_PATH: ${{ vars.DEV_PATH }}
      PM2_APP:  ${{ secrets.PM2_APP_DEV }}

    steps:
      - name: Deploy via SSH (DEV)
        uses: appleboy/ssh-action@v1.0.3
        env:
          DEV_PATH: ${{ vars.DEV_PATH }}
          PM@_APP: ${{ secrets.PM2_APP_DEV }}
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          envs: "DEV_PATH,PM2_APP"
          script: |
            exec sudo -u deploy -H bash -c "$0" "$@"
            set -euo pipefail
            echo "🚀 Deploy iniciado"
            echo "🔍 DEV_PATH='$DEV_PATH'"
            echo "🔍 PM2_APP='$PM2_APP'"
            
            if [[ "$DEV_PATH" != *"/dev" ]]; then
              echo "❌ Caminho inválido: $DEV_PATH"
              exit 1
            fi

            mkdir -p "$DEV_PATH"
            chown -R "$USER:$USER" "$DEV_PATH" || true
            git config --global --add safe.directory "$DEV_PATH"

            # 2) Puxa código da branch dev
            cd "$DEV_PATH"
            git fetch --all --prune
            git checkout dev
            git reset --hard origin/dev

            command -v pnpm >/dev/null 2>&1 || (corepack enable && corepack prepare pnpm@latest --activate)

            # 3) Backend: deps + migrações
            cd backend
            pnpm install --frozen-lockfile --prod
            pnpm dlx prisma migrate deploy
            pnpm dlx prisma generate

            # 4) Frontend: build
            cd ../frontend
            pnpm install --frozen-lockfile
            pnpm run build

            # 5) PM2
            cd "$DEV_PATH"
            if pm2 describe "$PM2_APP" > /dev/null; then
              pm2 restart "$PM2_APP"
            else
              if [ -f ecosystem.config.js ]; then
                pm2 start ecosystem.config.js --only "$PM2_APP" || pm2 start ecosystem.config.js
              else
                pm2 start backend/dist/server.js --name "$PM2_APP"
              fi
            fi

            pm2 save
