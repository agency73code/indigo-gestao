generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model area_atuacao {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   @db.VarChar(100)
  terapeuta_area_atuacao terapeuta_area_atuacao[]
}

model cargo {
  id              Int               @id @default(autoincrement())
  nome            String            @db.VarChar(100)
  terapeuta_cargo terapeuta_cargo[]
}

model documentos_terapeuta {
  id              Int       @id @default(autoincrement())
  terapeuta_id    String    @db.Char(36)
  tipo_documento  String    @db.VarChar(50)
  caminho_arquivo String    @db.VarChar(255)
  data_upload     DateTime  @db.Date
  terapeuta       terapeuta @relation(fields: [terapeuta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_documentos_terapeuta_terapeuta1")

  @@index([terapeuta_id], map: "fk_documentos_terapeuta_terapeuta1_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model terapeuta {
  id                     String                   @id @db.Char(36)
  nome                   String                   @db.VarChar(255)
  cpf                    String                   @unique(map: "cpf_UNIQUE") @db.Char(11)
  data_nascimento        DateTime                 @db.Date
  telefone               String?                  @db.VarChar(20)
  celular                String                   @db.VarChar(20)
  foto_perfil            String?                  @db.VarChar(255)
  email                  String                   @unique(map: "email_UNIQUE") @db.VarChar(255)
  email_indigo           String                   @unique(map: "email_indigo_UNIQUE") @db.VarChar(255)
  possui_veiculo         terapeuta_possui_veiculo
  placa_veiculo          String?                  @db.VarChar(20)
  modelo_veiculo         String?                  @db.VarChar(50)
  banco                  String                   @db.VarChar(50)
  agencia                String                   @db.VarChar(20)
  conta                  String                   @db.VarChar(50)
  chave_pix              String?                  @db.VarChar(255)
  cep_endereco           String                   @db.Char(8)
  logradouro_endereco    String                   @db.VarChar(255)
  numero_endereco        String                   @db.VarChar(10)
  bairro_endereco        String                   @db.VarChar(100)
  cidade_endereco        String                   @db.VarChar(100)
  uf_endereco            String                   @db.Char(2)
  complemento_endereco   String?                  @db.VarChar(100)
  cnpj_empresa           String?                  @unique(map: "cnpj_empresa_UNIQUE") @db.VarChar(14)
  cep_empresa            String?                  @db.Char(8)
  logradouro_empresa     String?                  @db.VarChar(255)
  numero_empresa         String?                  @db.VarChar(10)
  bairro_empresa         String?                  @db.VarChar(100)
  cidade_empresa         String?                  @db.VarChar(100)
  uf_empresa             String?                  @db.Char(2)
  complemento_empresa    String?                  @db.VarChar(100)
  data_entrada           DateTime                 @db.Date
  data_saida             DateTime?                @db.Date
  perfil_acesso          String                   @db.VarChar(20)
  atividade              terapeuta_atividade      @default(ativo)
  criado_em              DateTime                 @default(now()) @db.Timestamp(0)
  atualizado_em          DateTime                 @default(now()) @db.Timestamp(0)
  senha                  String?                  @db.VarChar(255)
  token_redefinicao      String?                  @db.VarChar(255)
  validade_token         DateTime?                @db.DateTime(0)
  documentos_terapeuta   documentos_terapeuta[]
  terapeuta_area_atuacao terapeuta_area_atuacao[]
  terapeuta_cargo        terapeuta_cargo[]

  @@index([atividade], map: "atividade_idx")
  @@index([cidade_endereco], map: "cidade_endereco_idx")
  @@index([nome], map: "nome_idx")
}

model terapeuta_area_atuacao {
  terapeuta_id    String       @db.Char(36)
  area_atuacao_id Int
  area_atuacao    area_atuacao @relation(fields: [area_atuacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_terapeuta_has_area_atuacao_area_atuacao1")
  terapeuta       terapeuta    @relation(fields: [terapeuta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_terapeuta_has_area_atuacao_terapeuta")

  @@id([terapeuta_id, area_atuacao_id])
  @@index([area_atuacao_id], map: "fk_terapeuta_has_area_atuacao_area_atuacao1_idx")
  @@index([terapeuta_id], map: "fk_terapeuta_has_area_atuacao_terapeuta_idx")
}

model terapeuta_cargo {
  terapeuta_id    String    @db.Char(36)
  cargo_id        Int
  numero_conselho String?   @db.VarChar(50)
  data_entrada    DateTime  @db.Date
  data_saida      DateTime? @db.Date
  cargo           cargo     @relation(fields: [cargo_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_terapeuta_has_cargo_cargo1")
  terapeuta       terapeuta @relation(fields: [terapeuta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_terapeuta_has_cargo_terapeuta1")

  @@id([terapeuta_id, cargo_id])
  @@index([cargo_id], map: "fk_terapeuta_has_cargo_cargo1_idx")
  @@index([terapeuta_id], map: "fk_terapeuta_has_cargo_terapeuta1_idx")
}

enum terapeuta_possui_veiculo {
  sim
  nao
}

enum terapeuta_atividade {
  ativo
  inativo
}
